<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

namespace App\Services\Extism\Proto;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>InstallPluginResponse</code>
 */
class InstallPluginResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string hash = 1;</code>
     */
    protected $hash = '';

    /**
     * Generated from protobuf field <code>optional .Error error = 2;</code>
     */
    protected $error = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type string $hash
     * @type \App\Services\Extism\Proto\Error $error
     *                                        }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\Api::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string hash = 1;</code>
     *
     * @return string
     */
    public function getHash()
    {
        return $this->hash;
    }

    /**
     * Generated from protobuf field <code>string hash = 1;</code>
     *
     * @param  string  $var
     * @return $this
     */
    public function setHash($var)
    {
        GPBUtil::checkString($var, true);
        $this->hash = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .Error error = 2;</code>
     *
     * @return \App\Services\Extism\Proto\Error|null
     */
    public function getError()
    {
        return $this->error;
    }

    public function hasError()
    {
        return isset($this->error);
    }

    public function clearError()
    {
        unset($this->error);
    }

    /**
     * Generated from protobuf field <code>optional .Error error = 2;</code>
     *
     * @param  \App\Services\Extism\Proto\Error  $var
     * @return $this
     */
    public function setError($var)
    {
        GPBUtil::checkMessage($var, \App\Services\Extism\Proto\Error::class);
        $this->error = $var;

        return $this;
    }
}
